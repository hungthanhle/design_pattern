// H·ªá th·ªëng c≈© ƒëang d√πng Google Maps
class GoogleMapService {
  getCoordinates(address: string) {
    console.log(`üó∫Ô∏è Google Maps t√¨m t·ªça ƒë·ªô cho: ${address}`);
    return { lat: 10.762622, lng: 106.660172 }; // v√≠ d·ª•
  }
}

// ·ª®ng d·ª•ng ch√≠nh
class LocationApp {
  constructor(private mapService: GoogleMapService) {}

  showLocation(address: string) {
    const coords = this.mapService.getCoordinates(address);
    console.log(`V·ªã tr√≠: ${coords.lat}, ${coords.lng}`);
  }
}

// --- S·ª≠ d·ª•ng ---
const googleService = new GoogleMapService();

// inject googleService v√†o ƒë·ªÉ l·∫•y coordinates
const app = new LocationApp(googleService);
app.showLocation("TP. H·ªì Ch√≠ Minh");


// PROBLEMS
// API m·ªõi t·ª´ MapBox
class MapBoxService {
  // kh√¥ng c√≥ h√†m getCoordinates
  getLatLongByPlaceName(place: string) {
    console.log(`üó∫Ô∏è MapBox t√¨m t·ªça ƒë·ªô cho: ${place}`);
    return { latitude: 10.762622, longitude: 106.660172 };
  }
}

const mapBoxService = new MapBoxService();

class MapBoxAdapter extends GoogleMapService {
  constructor(private mapBox: MapBoxService) {
    super();
  }

  getCoordinates(address: string) {
    const coords = this.mapBox.getLatLongByPlaceName(address);
    // Chuy·ªÉn ƒë·ªïi format cho ƒë√∫ng v·ªõi app c≈©
    return { lat: coords.latitude, lng: coords.longitude };
  }
}

const adaptedService = new MapBoxAdapter(mapBoxService);
const app1 = new LocationApp(adaptedService); // 
app1.showLocation("TP. H·ªì Ch√≠ Minh");
